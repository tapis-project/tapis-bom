<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.utexas.tacc.tapis</groupId>
    <artifactId>tapis-bom</artifactId>
    <version>2.0.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- Main BOM file for Tapis java projects using shared code and settings.
         Defines organization, licenses, developers, repositories, shared properties, dependency management
         and plugin management.
         Java projects should make this pom file their parent so they can include java shared code as dependencies.
         See github.com:tapis-project/tapis-java.git for an example.
    -->
    <name>TACC Tapis API BOM</name>
    <description>TAPIS services BOM dependencies</description>
    <url>https://github.com/tapis-project/tapis-bom</url>
    <organization>
        <name>TACC</name>
        <url>http://tacc.utexas.edu</url>
    </organization>

    <scm>
        <connection>scm:git:git@github.com:tapis-project/tapis-bom.git</connection>
        <url>https://github.com/tapis-project/tapis-bom</url>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>oss.sonatype.org-snapshot</id>
            <url>http://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <!-- Setting to always makes it difficult to change the BOM for -->
                <!-- local development because local changes get overwritten.   -->
                <!-- <updatePolicy>always</updatePolicy> -->
            </snapshots>
        </repository>
        <repository>
            <id>oss.sonatype.org-releases</id>
            <url>https://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
        <repository>
            <!-- org.everit.json.schema (schema validation) -->
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <licenses>
        <license>
            <name>BSD-3</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>
                BSD 3-Clause License

                Copyright (c) 2019, Texas Advanced Computing Center
                All rights reserved.

                Redistribution and use in source and binary forms, with or without
                modification, are permitted provided that the following conditions are met:

                * Redistributions of source code must retain the above copyright notice, this
                list of conditions and the following disclaimer.

                * Redistributions in binary form must reproduce the above copyright notice,
                this list of conditions and the following disclaimer in the documentation
                and/or other materials provided with the distribution.

                * Neither the name of the copyright holder nor the names of its
                contributors may be used to endorse or promote products derived from
                this software without specific prior written permission.

                THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
                WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
                THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
                EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
                SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
                GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
                ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
            </comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>jstubbs</id>
            <name>Joe Stubbs</name>
            <email>jstubbs@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>manager</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>sterry1</id>
            <name>Steve Terry</name>
            <email>sterry1@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>rcardone</id>
            <name>Richard Cardone</name>
            <email>rcardone@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>ajamthe</id>
            <name>Anagha Jamthe</name>
            <email>ajamthe@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>spadhy</id>
            <name>Smruti Padhy</name>
            <email>spadhy@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>jmeiring</id>
            <name>Joseph Meiring</name>
            <email>jmeiring@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>scblack</id>
            <name>Steven C. Black</name>
            <email>scblack@tacc.utexas.edu</email>
            <url>https://tacc-cloud.readthedocs.io</url>
            <organization>TACC</organization>
            <organizationUrl>https://www.tacc.utexas.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    
    <properties>
        <!-- Java version -->
        <java-source.version>1.17</java-source.version>
        <java-target.version>1.17</java-target.version>

        <!-- Maven compiler plugin Java release support -->
        <maven-compiler-plugin-release>17</maven-compiler-plugin-release>

        <!-- Version of tapis-client-java to be used. Individual projects may want to override. -->
        <tapis-client-java.version>[2.0.24,3.0)</tapis-client-java.version>

        <!-- Version of tapis-shared-java to be used. Individual projects may want to override. -->
        <tapis-shared-java.version>[2.0.24,3.0)</tapis-shared-java.version>

        <!-- Source encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Capture the UTC build time for filtering use in children poms -->
        <!-- There's some goofy behavior that prevent the direct use of    -->
        <!-- maven property, so we format and reassign it.                 -->
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>

        <!-- Below are the version numbers for all software on which we explicitly depend.  -->
        <!-- If a library or plugin appears as a dependency in some pom file, then that     -->
        <!-- artifact's version number should be in the lists below for easy management and -->
        <!-- access.  Version numbers are organized into 2 lists, one for plugins and the   -->
        <!-- other for library dependencies.                                                -->
        <!--                                                                                -->
        <!-- Note that we specify the versions of the base maven plugins so that they       -->
        <!-- don't change from underneath us.  This approach requires us to manually        -->
        <!-- upgrade the plugins we use; a reasonable upgrade cycle would be every 6-12     -->
        <!-- months.  See http://maven.apache.org/plugins/index.html for latest plugin      -->
        <!-- listing.  Last upgrade occurred on 4/24/2017.                                  -->
        <!--                                                                                -->
        <!--                    PLEASE KEEP THESE LISTS ALPHABETIZED                        -->

        <!-- PLUGIN Versions (in alphabetical order) -->
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <flyway-maven-plugin.version>6.0.8</flyway-maven-plugin.version>
        <gitflow-maven-plugin.version>1.16.0</gitflow-maven-plugin.version>
        <google-maven-replacer-plugin.version>1.5.3</google-maven-replacer-plugin.version>
        <jooq-codegen-maven-plugin.version>3.14.9</jooq-codegen-maven-plugin.version>
        <maven-compiler-plugin.version>3.9.0</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-javadoc-plugin.version>3.3.1</maven-javadoc-plugin.version>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
        <openapi-generator-maven-plugin.version>5.4.0</openapi-generator-maven-plugin.version>
        <swagger-maven-plugin.version>2.1.12</swagger-maven-plugin.version>

        <!-- LIBRARY Versions (in alphabetical order) -->
        <activemq-client.version>5.16.0</activemq-client.version>
        <amqp-client.version>5.14.1</amqp-client.version>
        <apache-sshd.version>2.8.0</apache-sshd.version>
        <args4j.version>2.33</args4j.version>
        <commons-codec.version>1.15</commons-codec.version>
        <commons-dbutils.version>1.7</commons-dbutils.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-math3.version>3.6.1</commons-math3.version>
        <eddsa.version>0.3.0</eddsa.version>
        <flywaydb.version>6.0.8</flywaydb.version>
        <google-findbugs.version>3.0.2</google-findbugs.version>
        <gsissh.version>0.12.1</gsissh.version>
        <gson.version>2.8.9</gson.version>
        <gson-fire.version>1.8.5</gson-fire.version>
        <guava.version>31.0.1-jre</guava.version>
        <hibernate.validator.version>6.1.6.Final</hibernate.validator.version>
        <hikariCP.version>3.3.1</hikariCP.version>
        <hk2.version>2.6.1</hk2.version>
        <httpclient.version>4.5.8</httpclient.version>
        <httpmime.version>4.5.8</httpmime.version>
        <jackson.version>2.12.1</jackson.version>
        <jakarta.el.version>3.0.3</jakarta.el.version>
        <jakarta.servlet-api.version>4.0.3</jakarta.servlet-api.version>          <!-- jersey group -->
        <jargon-core.version>4.3.0.1-RELEASE</jargon-core.version>
        <javacc.version>7.0.6</javacc.version>
        <javax.activation.activation.version>1.1.1</javax.activation.activation.version>
        <javax.annotation.version>1.3.2</javax.annotation.version>
        <javax.el-api.version>3.0.1-b06</javax.el-api.version>
        <javax.mail.version>1.6.2</javax.mail.version>
        <javax.validation.version>2.0.1.Final</javax.validation.version>
        <javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
        <javax.websocket-api.version>1.1</javax.websocket-api.version>
        <javax.xml.bind.jaxb-api.version>2.1</javax.xml.bind.jaxb-api.version>
        <javax.xml.bind.jaxb-core.version>2.3.0.1</javax.xml.bind.jaxb-core.version>
        <javax.xml.bind.jaxb-impl.version>2.3.2</javax.xml.bind.jaxb-impl.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jersey-container-servlet.version>2.35</jersey-container-servlet.version> <!-- jersey group -->
        <jersey-entity-filtering.version>2.35</jersey-entity-filtering.version> <!-- jersey group -->
        <jetty-server.version>9.4.0.M1</jetty-server.version>
        <jjwt.version>0.11.2</jjwt.version>
        <jooq.version>3.14.9</jooq.version>
        <junit.version>4.13.2</junit.version>
        <kubernetes-client.version>12.0.1</kubernetes-client.version>
        <logback-classic.version>1.2.3</logback-classic.version>  <!-- Logback supplies the proper version of sl4j -->
        <metrics-core.version>3.2.3</metrics-core.version>
        <mockito-core.version>3.0.0</mockito-core.version>
        <okhttp3.version>4.9.3</okhttp3.version>
        <org.everit.json.schema.version>1.12.1</org.everit.json.schema.version>
        <p6spy.version>3.8.3</p6spy.version>
        <postgresql.version>42.3.2</postgresql.version>
        <rabbitmq.version>5.10.0</rabbitmq.version>
        <reactor-test.version>3.4.6</reactor-test.version>
        <reactor-rabbitmq.version>1.5.2</reactor-rabbitmq.version>
        <reactor-core.version>3.4.6</reactor-core.version>
        <reactor-extra.version>3.4.3</reactor-extra.version>
        <shiro.version>1.4.1</shiro.version>
        <slf4j-api.version>1.7.35</slf4j-api.version>
        <snakeyaml.version>1.26</snakeyaml.version>
        <software.amazon.awssdk.version>2.13.11</software.amazon.awssdk.version> <!-- v2 of aws sdk-->
        <com.amazonaws.version>1.11.327</com.amazonaws.version> <!-- v1 of aws sdk-->
        <sshj.version>0.27.0</sshj.version>
        <statefulj.version>3.0</statefulj.version>
        <swagger-annotations.version>2.1.4</swagger-annotations.version>
        <swagger-annotations1.version>1.5.24</swagger-annotations1.version>
        <swagger-jaxrs2.version>2.0.10</swagger-jaxrs2.version>
        <swagger-ui.version>3.23.8</swagger-ui.version>
        <testng.version>7.5</testng.version>
        <threetenbp.version>1.3.5</threetenbp.version>
        <undertow.version>2.2.2.Final</undertow.version>
        <vault-java-driver.version>5.1.2</vault-java-driver.version>
        <!-- A NOTE ABOUT INTER-DEPENDENCIES                                                 -->
        <!--                                                                                 -->
        <!-- When an above library version is followed by a comment for the form "XX group"  -->
        <!-- it indicates that there are interdependencies between all libraries marked with -->
        <!-- the same group.  This usually doesn't matter because most projects include the  -->
        <!-- root library and it includes all its dependencies automatically.  Sometimes,    -->
        <!-- however, another project may include one of the root library's dependencies     -->
        <!-- without including the root library.  In this case, we usually prefer to use the -->
        <!-- same version of the dependency library as the root library.  This is especially -->
        <!-- true when the projects are ultimately packaged together in, for example, a WAR  -->
        <!-- file.  The group comment in the above version list is used to signal that the   -->
        <!-- libraries are interdependent and version changes in to members of the group     -->
        <!-- should be coordinated.                                                          -->
    </properties>

    <!-- Below dependencyManagement section defines default versions and settings (such as scope) -->
    <!--  that will be used for any project that imports this bom file or specifies this bom file -->
    <!--  as its parent.                                                                          -->
    <!--  So when defining dependencies a project need only specify groupId and artifactId        -->
    <dependencyManagement>
        <dependencies>

            <!--  POJO validation     -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>

            <!-- Reactor/RabbitMQ-->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <scope>test</scope>
                <version>${reactor-test.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.rabbitmq</groupId>
                <artifactId>reactor-rabbitmq</artifactId>
                <version>${reactor-rabbitmq.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor.addons</groupId>
                <artifactId>reactor-extra</artifactId>
                <version>${reactor-extra.version}</version>
            </dependency>

            <!-- Notifications/websockets -->
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-core</artifactId>
                <version>${undertow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-servlet</artifactId>
                <version>${undertow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-websockets-jsr</artifactId>
                <version>${undertow.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>${javax.websocket-api.version}</version>
            </dependency>


            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${amqp-client.version}</version>
            </dependency>
            <dependency>
                <groupId>args4j</groupId>
                <artifactId>args4j</artifactId>
                <version>${args4j.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbutils</groupId>
                <artifactId>commons-dbutils</artifactId>
                <version>${commons-dbutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flywaydb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${google-findbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${com.amazonaws.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${software.amazon.awssdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.gsonfire</groupId>
                <artifactId>gson-fire</artifactId>
                <version>${gson-fire.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikariCP.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta.servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${javax.activation.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${javax.mail.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${javax.xml.bind.jaxb-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${javax.xml.bind.jaxb-impl.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2</artifactId>
                <version>${hk2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-utils</artifactId>
                <version>${hk2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-api</artifactId>
                <version>${hk2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.ext</groupId>
                <artifactId>jersey-bean-validation</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.ext</groupId>
                <artifactId>jersey-entity-filtering</artifactId>
                <version>${jersey-entity-filtering.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <!-- Jersey will default to the moxy json parser if it's found on the classpath -->
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-moxy</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-grizzly2-http</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.test-framework</groupId>
                <artifactId>jersey-test-framework-core</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet-core</artifactId>
                <version>${jersey-container-servlet.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-meta</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <!-- Logback supplies the proper version of sl4j -->
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${metrics-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.everit-org.json-schema</groupId>
                <artifactId>org.everit.json.schema</artifactId>
                <version>${org.everit.json.schema.version}</version>
            </dependency>
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <!-- Logback supplies the proper version of sl4j -->
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations1.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-jaxrs2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-jaxrs2</artifactId>
                <version>${swagger-jaxrs2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger-jaxrs2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
                <version>${swagger-jaxrs2.version}</version>
            </dependency>
            <dependency>
                <!-- There are only test dependencies on testng -->
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.threeten</groupId>
                <artifactId>threetenbp</artifactId>
                <version>${threetenbp.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.utexas.tacc.tapis</groupId>
                <artifactId>tapis-vault-java-driver</artifactId>
                <version>5.1.2</version> 
            </dependency>
            <dependency>
                <groupId>io.kubernetes</groupId>
                <artifactId>client-java</artifactId>
                <version>${kubernetes-client.version}</version>
            </dependency>        
            <dependency>
                <groupId>net.java.dev.javacc</groupId>
                <artifactId>javacc</artifactId>
                <version>${javacc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.statefulj</groupId>
                <artifactId>statefulj-fsm</artifactId>
                <version>${statefulj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-core</artifactId>
                <version>${apache-sshd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-sftp</artifactId>
                <version>${apache-sshd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-scp</artifactId>
                <version>${apache-sshd.version}</version>
            </dependency>
            <!-- For ed25519 ssh support -->
            <dependency>
                <groupId>net.i2p.crypto</groupId>
                <artifactId>eddsa</artifactId>
                <version>${eddsa.version}</version>
            </dependency>    
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Below pluginManagement section defines default versions and settings (such as executions) -->
        <!--  that will be used for any project that specifies this bom file as its parent.            -->
        <!--  When including plugins a project need only specify groupId and artifactId.               -->
        <!-- Settings may be overridden.                                                               -->
        <pluginManagement>
            <!-- Document what each plugin is used for -->
            <plugins>
                <!-- This plugin is used to compile the project's sources. -->
                <!-- It also forces the IDE to use the specified Java version -->
                <!-- when creating new projects. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- The release tells maven what version of -->
                        <!-- the Java compiler to use internally. -->
                        <release>${maven-compiler-plugin-release}</release>
                        <source>${java-source.version}</source>
                        <target>${java-target.version}</target>
                    </configuration>
                </plugin>

                <!-- This plugin is used to build war files. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <warSourceDirectory>src/main/webapp</warSourceDirectory>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>

                <!-- Capture the git commit hash and branch identifiers.  -->
                <!-- We use the plugin only for git and depend on regular -->
                <!-- maven filtering for timestamp and code version. We   -->
                <!-- could use this plugin to update jar and war manifest -->
                <!-- files, but we use separate resource file filtering   -->
                <!-- instead. See the resources element below for         -->
                <!-- filtering details.                                   -->
                <!-- Puts the commit hash in resources                    -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${buildnumber-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                        <shortRevisionLength>8</shortRevisionLength>
                    </configuration>
                </plugin>

                <!-- For running unit tests    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <groups>unit</groups>
                    </configuration>
                </plugin>

                <!-- For running integration tests with maven. The tests
                     need to be annotated like @Test(groups={'integration'})
                     Use "mvn verify" to run -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <trimStackTrace>false</trimStackTrace>
                        <groups>integration</groups>
                        <includes>
                            <include>**/*Test*.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- For sourcemaps to be created with the released code -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>flyway-clean-database</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>clean</goal>
                                <goal>migrate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq-codegen-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>jooq-codegen</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- For building a FAT jar file. Downstream APIs will need to specify the transformers/mainClass that is commented out below     -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>module-info.class</exclude>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
<!--                                <transformers>-->
<!--                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
<!--                                        <mainClass>edu.utexas.tacc.tapis.files.api.FilesApplication</mainClass>-->
<!--                                    </transformer>-->
<!--                                </transformers>-->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>


                <!-- Generate the openapi documentation from the code -->
                <plugin>
                    <groupId>io.swagger.core.v3</groupId>
                    <artifactId>swagger-maven-plugin</artifactId>
                    <version>${swagger-maven-plugin.version}</version>
                </plugin>

                <!-- Javadocs, required to push to maven central     -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <doclint>none</doclint>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--  For releases to local nexus repo       -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deply-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>

                <!--  For releases to maven central          -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>


                <!-- For signing the releases to maven central with a GPG key               -->
                <!-- By default skip signing so sub-projects do not need to explicitly skip -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <configuration>
                        <gpgArguments>
                            <arg>--batch</arg>
                        </gpgArguments>
                    </configuration>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

              <!--  gitflow-maven-plugin supports various git workflow steps, such as gitflow:release-start-->
              <!--    gitflow:release-finish, gitflow:feature-start, gitflow:feature-finish-->
              <!-- Used for service code release flow only. Not shared code release flow -->
              <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>${gitflow-maven-plugin.version}</version>
                <configuration>
                    <!-- false = disable git push for testing -->
                    <pushRemote>true</pushRemote>
                    <!-- true = print output of executed commands -->
                    <verbose>true</verbose>
                    <!-- true = include mvn clean install during execution -->
                    <installProject>true</installProject>
                    <gitFlowConfig>
                        <!-- Branch that will hold the officially released versions and be the source for hotfixes  -->
                        <productionBranch>main</productionBranch>
                        <!-- Branch for development that will always have the latest -->
                        <developmentBranch>dev</developmentBranch>
                        <!-- Prefix when creating release branch. Format will be <prefix>X.Y.Z -->
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <!-- Prefix when creating feature branch. Format will be <prefix>X.Y.Z -->
                        <releaseBranchPrefix>feature/</releaseBranchPrefix>
                    </gitFlowConfig>
                    <!-- List of optional configuration settings (with defaults) -->
                    <!-- If desired run verify first -->
                    <!-- Execute mvn verify before release -->
                    <!--          <preReleaseGoals>verify</preReleaseGoals>-->
                    <!--          <preHotfixGoals>verify</preHotfixGoals>-->
                    <!--          <mvnExecutable>path_to_maven_executable</mvnExecutable>-->
                    <!--          <gitExecutable>path_to_git_executable</gitExecutable>-->
                    <!--          <installProject>false</installProject>-->
                    <!--          <verbose>false</verbose>-->
                    <!--          &lt;!&ndash; true = retain the release branch upon release-finish &ndash;&gt;-->
                    <!--          <keepBranch>false</keepBranch>-->
                    <!--          &lt;!&ndash; false = disable git push for testing &ndash;&gt;-->
                    <!--          <pushRemote>false</pushRemote>-->
                    <!--          <gitFlowConfig>-->
                    <!--            <productionBranch>master</productionBranch>-->
                    <!--            <developmentBranch>develop</developmentBranch>-->
                    <!--            <featureBranchPrefix>feature/</featureBranchPrefix>-->
                    <!--            <releaseBranchPrefix>release/</releaseBranchPrefix>-->
                    <!--            <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>-->
                    <!--            <supportBranchPrefix>support/</supportBranchPrefix>-->
                    <!--            <versionTagPrefix></versionTagPrefix>-->
                    <!--            <origin>origin</origin>-->
                    <!--          </gitFlowConfig>-->
                    <commitMessages>
                        <!-- since 1.2.1, see Customizing commit messages -->
                    </commitMessages>
                </configuration>
              </plugin>
            </plugins>
        </pluginManagement>

      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
      </plugins>
    </build>

    <profiles>

      <!-- Profile for building using TACC repositories -->
      <profile>
        <id>tacc</id>
        <activation>
          <property>
            <name>!skipTaccProfile</name>
          </property>
        </activation>
        <distributionManagement>
          <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>http://c002.rodeo.tacc.utexas.edu:30044/repository/maven-snapshots</url>
          </snapshotRepository>
           <repository>
             <id>nexus-releases</id>
             <url>http://c002.rodeo.tacc.utexas.edu:30044/repository/maven-releases</url>
          </repository>
        </distributionManagement>
        <repositories>
          <repository>
            <id>tapis-local-snapshots</id>
            <name>Local repo for snapshots</name>
            <url>http://c002.rodeo.tacc.utexas.edu:30044/repository/maven-snapshots</url>
            <releases>  <enabled>false</enabled> </releases>
            <snapshots> <enabled>true</enabled>  </snapshots>
          </repository>
          <repository>
            <id>tapis-local-releases</id>
            <name>Local repo for releases</name>
            <url>http://c002.rodeo.tacc.utexas.edu:30044/repository/maven-releases</url>
          </repository>
        </repositories>
      </profile>

      <!-- Profile for building without using TACC repositories -->
      <profile>
        <id>tacc-external</id>
      </profile>

      <!--
            The OSSRH profile implements all the plugins needed to deploy code to Maven Central, like GPG signing the artifacts,
            creating source code maps and javadocs, all of which are required to publish an artifact.
        -->
        <profile>
            <id>ossrh</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
